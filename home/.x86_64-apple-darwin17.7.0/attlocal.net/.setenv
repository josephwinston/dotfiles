# /bin/csh -f

#
# $Id: .setenv,v 1.1 2004/08/09 23:13:08 CVS_jody Exp $
#

#
# https://blogs.agilefaqs.com/2014/01/12/fixing-perl-warning-setting-locale-failed-on-mac-osx/
#

setenv LC_CTYPE en_US.UTF-8
setenv LC_ALL en_US.UTF-8

#
# What time zone
#

setenv TZ CST6CDT

#
# What man pages
#

setenv MANPATH `manpath -q`
#setenv MANPATH ${MANPATH}:/Library/Framework/Mono/Versions/Current/man
setenv MANPATH ${MANPATH}:/opt/local/share/man

#
# To Print out man pages using man -t man_entry
#

# setenv TROFF ptroff
setenv TROFF "groff -l"
setenv TCAT lpr

#
# more not less
#

setenv PAGER more

#
# So git works correctly.  See http://eigenjoy.com/2008/07/23/mac-os-x-color-showing-escwhatever-for-git-diff-colors-and-more/
#

setenv MORE -erX
setenv LESS -erX

#
# Set up CVS
#

# setenv CVSROOT :pserver:CVS_jody@blossom.mine.nu:/home/CACHE/CVS_jody/CACHE/CVSROOT

#
# I like the old colors better
#

setenv LS_COLORS "no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:"

#
# See http://developer.apple.com/techpubs/macosx/ReleaseNotes/AvailabilityMacros.html
#

# setenv MACOSX_DEPLOYMENT_TARGET "10.2" # Was 10.2

#
# RSYNC
#

setenv RSYNC_RSH ssh

#
# EDITOR
#

setenv EDITOR /Applications/MacPorts/Emacs.app/Contents/MacOS/bin/emacsclient

#
# Bash 
#

if ( -e "/opt/local/bin/bash" ) then
  setenv BASH_HOME /opt/local/bin/bash
else
  setenv BASH_HOME /bin/bash
endif

#
# Macports
#

# if ($?DYLD_FALLBACK_LIBRARY_PATH == 0) then
#    setenv DYLD_FALLBACK_LIBRARY_PATH /opt/local/lib
# else
#    setenv DYLD_FALLBACK_LIBRARY_PATH /opt/local/lib:${DYLD_FALLBACK_LIBRARY_PATH}
# endif

#
# numba
#

# setenv DYLD_FALLBACK_LIBRARY_PATH ${DYLD_FALLBACK_LIBRARY_PATH}:/usr/lib

#
# Python
#

setenv PYTHONSTARTUP  ~/.pythonrc.py

#
# pyface
#

setenv ETS_TOOLKIT qt4
# setenv QT_API pyqt

# 
#  Remember to set the environment variable GRADLE_HOME to the path to
# the gradle distribution: /opt/local/share/java/gradle
#

setenv GRADLE_HOME /opt/local/share/java/gradle

#
# OpenJDK via macports
#

setenv JAVA_HOME /Library/Java/JavaVirtualMachines/openjdk8/Contents/Home
# setenv JAVA_HOME /Library/Java/JavaVirtualMachines/openjdk11-openj9/Contents/Home

# setenv JAVA_HOME `/usr/libexec/java_home --version 1.7`
# setenv JAVA_HOME `/usr/libexec/java_home --version 1.8`

#
# hadoop
#

setenv HADOOP_PREFIX ~/src/Tools/HADOOP/hadoop-2.6.0
setenv HADOOP_HOME ~/src/Tools/HADOOP/hadoop-2.6.0

#
# GOLANG
#

setenv GOPATH ~/src/Languages/GO
set path = ($path ${GOPATH}/bin)

#
# See https://github.com/jupyter/notebook/issues/2438
#

setenv BROWSER open

#
# Mac users may need to set the environment variable
# "HDF5_USE_FILE_LOCKING" to the five-character string "FALSE" when
# accessing network mounted files.  This is an application run-time
# setting, not a configure or build setting.  Otherwise errors such
# as "unable to open file" or "HDF5 error" may be encountered.

setenv HDF5_USE_FILE_LOCKING FALSE

#
# elasticsearch
#

#setenv JAVA_HOME `/usr/libexec/java_home --version 1.8`
#setenv ES_HOME ${HOME}/work/elasticsearch--6.7.0 # Note 7.6.1 fails!
#set path = ($path ${ES_HOME}/bin)

#
# PKG_CONFIG_PATH
#

setenv PKG_CONFIG_PATH /usr/local/lib/pkgconfig

#
# see https://stackoverflow.com/a/55344565
#

setenv SDKROOT "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"

